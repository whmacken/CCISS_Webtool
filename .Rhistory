# Concatenate Subzones by Low and High Elevation:
#$SubReg.lo=c(Coast.lo, Boreal.lo,SubBor.lo,IntRainF.lo,SDry.lo)
#SubReg.hi=c(Coast.hi, SubBor.hi,IntRainF.hi,SDry.hi)
#temp removal  NICH.hi,Boreal.hi NICH.lo,
# Concatenate Subzones by Analysis Region:
SubReg.coast = c(Coast.lo, Coast.hi)
SubReg.boreal= c(Boreal.lo, SubBor.lo, SubBor.hi)
SubReg.rainfor = c(IntRainF.lo, IntRainF.hi)
SubReg.sdry = c(SDry.lo, SDry.hi)
# Create a variable that describes SubRegion:
X$SREG=""
X$SREG[X$BGC %in% c(SubReg.boreal)]="Boreal"
X$SREG[X$BGC %in% c(SubReg.coast)]="Coast"
X$SREG[X$BGC %in% c(SubReg.rainfor)]="IntRainF"
#X$REG[X$BGC %in% c(NICH.lo)]="NICH"
X$SREG[X$BGC %in% c(SubReg.sdry)]="SDry"
#X$REG[X$BGC %in% c(SubBor.lo,SubBor.hi)]="SubBor"
#temporary ,Boreal.hi ,NICH.hi)
# ID and Drop Missing Subzones Excluded in the SubRegion Above:
Missing=unique(X$BGC[X$SREG==""])
Missing
X=droplevels(X[!X$BGC %in% Missing,])
X=X[,c(ncol(X),1:(ncol(X)-1))]
X=X[X$BGC %in% c(SubReg.sdry),] # southern dry
X=X[X$BGC %in% c(SubReg.sdry),] # southern dry
X=X[X$BGC %in% c(SubReg.rainfor),] # interior rainforest
X=X[X$BGC %in% c(SubReg.coast),] # coastal
X=X[X$BGC %in% c(SubReg.boreal),] # boreal
X=X1
IntRainF.lo=c("ICHdk","ICHdm","ICHdw1","ICHdw3","ICHmk1","ICHmk2","ICHmk3","ICHmk4","ICHmk5",
"ICHmm","ICHmw1","ICHmw2","ICHmw3","ICHmw4","ICHmw5","ICHmw6","ICHvk1","ICHvk2",
"ICHwk1","ICHwk2","ICHwk3","ICHwk4","SBSvk","SBSwk1","SBSwk2",
"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
IntRainF.hi=c("ESSFmh","ESSFmm1","ESSFmm2","ESSFvc","ESSFvk","ESSFvm","ESSFwc2",
"ESSFwc3","ESSFwc4","ESSFwh1","ESSFwh2","ESSFwh3","ESSFwk1","ESSFwk2","ESSFwm1","ESSFwm2","ESSFwm3")
X=X1
Boreal.lo=c("BWBSdk","BWBSmk","BWBSmw","BWBSwk1","BWBSwk2","BWBSwk3")
#Boreal.hi=c("SWBmk","SWBun","ESSFmv4")
Coast.lo=c("CDFmm","CWHdm","CWHds1","CWHds2","CWHmm1","CWHmm2","CWHms1","CWHms2","CWHun","CWHvh1","CWHvh2","CWHvh3",
"CWHvm1","CWHvm2","CWHwh1","CWHwh2","CWHwm","CWHws1","CWHws2","CWHxm1","CWHxm2")
Coast.hi=c("ESSFmw","ESSFmw1","MHmm1","MHmm2","MHun","MHwh","MHwh1")
#Removed Woodland ,"ESSFmww","ESSFvcw","ESSFwmw","ESSFwcw"
IntRainF.lo=c("ICHdk","ICHdm","ICHdw1","ICHdw3","ICHmk1","ICHmk2","ICHmk3","ICHmk4","ICHmk5",
"ICHmm","ICHmw1","ICHmw2","ICHmw3","ICHmw4","ICHmw5","ICHmw6","ICHvk1","ICHvk2",
"ICHwk1","ICHwk2","ICHwk3","ICHwk4","SBSvk","SBSwk1","SBSwk2")
#"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
IntRainF.hi=c("ESSFmh","ESSFmm1","ESSFmm2","ESSFvc","ESSFvk","ESSFvm","ESSFwc2",
"ESSFwc3","ESSFwc4","ESSFwh1","ESSFwh2","ESSFwh3","ESSFwk1","ESSFwk2","ESSFwm1","ESSFwm2","ESSFwm3")
#NICH.lo=c("ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
#NICH.hi=c("ESSFun","ESSFwv","ESSFmk")
SDry.lo=c("BGxh1","BGxh2","BGxh3","BGxw1","BGxw2","IDFdc","IDFdh","IDFdk1","IDFdk2","IDFdk3","IDFdk4","IDFdk5","IDFdm1","IDFdm2","IDFdw","IDFmw1","IDFmw2",
"IDFxc","IDFxh1","IDFxh2","IDFxk","IDFxm","IDFxw","IDFxx1","IDFxx2",
"PPxh1","PPxh2","PPxw",
"IDFww","IDFww1","ICHxw")
##"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3","MSxv",
SDry.hi=c("ESSFdc1","ESSFdc2","ESSFdc3","ESSFdk1","ESSFdk2","ESSFdv1","ESSFdv2",
"ESSFxc1","ESSFxc2","ESSFxc3","ESSFxv1","ESSFxv2","ESSFdh2","ESSFmw2","ESSFdh1",
"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3")
#removed woodland ,"ESSFdkw","ESSFdvw","ESSFxcw","ESSFxvw","ESSFdcp","ESSFdcw"
SubBor.lo=c("SBPSmc","SBPSxc","SBSdh1","SBSdh2","SBSdk","SBSdw1","SBSdw2","SBSdw3",
"SBSmc1","SBSmc2","SBSmc3","SBSmh","SBSmk1","SBSmk2","SBSmm","SBSmw","SBSwk3","SBPSdc","SBPSmk","MSxv")
"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
SubBor.hi=c("ESSFmc","ESSFmv1","ESSFmv2","ESSFmv3","ESSFun","ESSFwv","ESSFmk","SWBmk","SWBun","ESSFmv4")
# Concatenate Subzones by Low and High Elevation:
#$SubReg.lo=c(Coast.lo, Boreal.lo,SubBor.lo,IntRainF.lo,SDry.lo)
#SubReg.hi=c(Coast.hi, SubBor.hi,IntRainF.hi,SDry.hi)
#temp removal  NICH.hi,Boreal.hi NICH.lo,
# Concatenate Subzones by Analysis Region:
SubReg.coast = c(Coast.lo, Coast.hi)
SubReg.boreal= c(Boreal.lo, SubBor.lo, SubBor.hi)
SubReg.rainfor = c(IntRainF.lo, IntRainF.hi)
SubReg.sdry = c(SDry.lo, SDry.hi)
# Create a variable that describes SubRegion:
X$SREG=""
X$SREG[X$BGC %in% c(SubReg.boreal)]="Boreal"
X$SREG[X$BGC %in% c(SubReg.coast)]="Coast"
X$SREG[X$BGC %in% c(SubReg.rainfor)]="IntRainF"
#X$REG[X$BGC %in% c(NICH.lo)]="NICH"
X$SREG[X$BGC %in% c(SubReg.sdry)]="SDry"
#X$REG[X$BGC %in% c(SubBor.lo,SubBor.hi)]="SubBor"
#temporary ,Boreal.hi ,NICH.hi)
# ID and Drop Missing Subzones Excluded in the SubRegion Above:
Missing=unique(X$BGC[X$SREG==""])
Missing
X=droplevels(X[!X$BGC %in% Missing,])
X=X[,c(ncol(X),1:(ncol(X)-1))]
X=X1
Boreal.lo=c("BWBSdk","BWBSmk","BWBSmw","BWBSwk1","BWBSwk2","BWBSwk3")
#Boreal.hi=c("SWBmk","SWBun","ESSFmv4")
Coast.lo=c("CDFmm","CWHdm","CWHds1","CWHds2","CWHmm1","CWHmm2","CWHms1","CWHms2","CWHun","CWHvh1","CWHvh2","CWHvh3",
"CWHvm1","CWHvm2","CWHwh1","CWHwh2","CWHwm","CWHws1","CWHws2","CWHxm1","CWHxm2")
Coast.hi=c("ESSFmw","ESSFmw1","MHmm1","MHmm2","MHun","MHwh","MHwh1")
#Removed Woodland ,"ESSFmww","ESSFvcw","ESSFwmw","ESSFwcw"
IntRainF.lo=c("ICHdk","ICHdm","ICHdw1","ICHdw3","ICHmk1","ICHmk2","ICHmk3","ICHmk4","ICHmk5",
"ICHmm","ICHmw1","ICHmw2","ICHmw3","ICHmw4","ICHmw5","ICHmw6","ICHvk1","ICHvk2",
"ICHwk1","ICHwk2","ICHwk3","ICHwk4","SBSvk","SBSwk1","SBSwk2")
#"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
IntRainF.hi=c("ESSFmh","ESSFmm1","ESSFmm2","ESSFvc","ESSFvk","ESSFvm","ESSFwc2",
"ESSFwc3","ESSFwc4","ESSFwh1","ESSFwh2","ESSFwh3","ESSFwk1","ESSFwk2","ESSFwm1","ESSFwm2","ESSFwm3")
#NICH.lo=c("ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
#NICH.hi=c("ESSFun","ESSFwv","ESSFmk")
SDry.lo=c("BGxh1","BGxh2","BGxh3","BGxw1","BGxw2","IDFdc","IDFdh","IDFdk1","IDFdk2","IDFdk3","IDFdk4","IDFdk5","IDFdm1","IDFdm2","IDFdw","IDFmw1","IDFmw2",
"IDFxc","IDFxh1","IDFxh2","IDFxk","IDFxm","IDFxw","IDFxx1","IDFxx2",
"PPxh1","PPxh2","PPxw",
"IDFww","IDFww1","ICHxw")
##"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3","MSxv",
SDry.hi=c("ESSFdc1","ESSFdc2","ESSFdc3","ESSFdk1","ESSFdk2","ESSFdv1","ESSFdv2",
"ESSFxc1","ESSFxc2","ESSFxc3","ESSFxv1","ESSFxv2","ESSFdh2","ESSFmw2","ESSFdh1",
"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3")
#removed woodland ,"ESSFdkw","ESSFdvw","ESSFxcw","ESSFxvw","ESSFdcp","ESSFdcw"
SubBor.lo=c("SBPSmc","SBPSxc","SBSdh1","SBSdh2","SBSdk","SBSdw1","SBSdw2","SBSdw3",
"SBSmc1","SBSmc2","SBSmc3","SBSmh","SBSmk1","SBSmk2","SBSmm","SBSmw","SBSwk3","SBPSdc","SBPSmk","MSxv",
"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
SubBor.hi=c("ESSFmc","ESSFmv1","ESSFmv2","ESSFmv3","ESSFun","ESSFwv","ESSFmk","SWBmk","SWBun","ESSFmv4")
# Concatenate Subzones by Low and High Elevation:
#$SubReg.lo=c(Coast.lo, Boreal.lo,SubBor.lo,IntRainF.lo,SDry.lo)
#SubReg.hi=c(Coast.hi, SubBor.hi,IntRainF.hi,SDry.hi)
#temp removal  NICH.hi,Boreal.hi NICH.lo,
# Concatenate Subzones by Analysis Region:
SubReg.coast = c(Coast.lo, Coast.hi)
SubReg.boreal= c(Boreal.lo, SubBor.lo, SubBor.hi)
SubReg.rainfor = c(IntRainF.lo, IntRainF.hi)
SubReg.sdry = c(SDry.lo, SDry.hi)
# Create a variable that describes SubRegion:
X$SREG=""
X$SREG[X$BGC %in% c(SubReg.boreal)]="Boreal"
X$SREG[X$BGC %in% c(SubReg.coast)]="Coast"
X$SREG[X$BGC %in% c(SubReg.rainfor)]="IntRainF"
#X$REG[X$BGC %in% c(NICH.lo)]="NICH"
X$SREG[X$BGC %in% c(SubReg.sdry)]="SDry"
#X$REG[X$BGC %in% c(SubBor.lo,SubBor.hi)]="SubBor"
#temporary ,Boreal.hi ,NICH.hi)
# ID and Drop Missing Subzones Excluded in the SubRegion Above:
Missing=unique(X$BGC[X$SREG==""])
Missing
X=droplevels(X[!X$BGC %in% Missing,])
X=X[,c(ncol(X),1:(ncol(X)-1))]
X=X[X$BGC %in% c(SubReg.rainfor),] # interior rainforest
X$SREG=factor(X$SREG)
# STEP 9: Re-factor
X$Y=factor(X$Y)
X$BGC=factor(X$BGC)
# END
RM <- c("Site", "Y", "SREG", "Longitude", "Latitude", "Elevation") # Variables with numeric NA
RM
X2=X[, !names(X) %in% c(RM)] # Drop variables
fit=rpart(BGC ~.,data=X2,method="class",control=rpart.control(cp=.01))
printcp(fit)
print(fit)
pp=fit$cptable[which.min(fit$cptable[,"xerror"]),"CP"] # obtain the best split
#fit= prune(fit,cp=0.0260870)
fit= prune(fit,cp=pp)
prp(fit,type=0,extra=8,fallen.leaves=1,varlen=12,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
prp(fit,type=0,extra=2,fallen.leaves=0,branch=0.6,varlen=12,split.cex=1.6,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
fit=rpart(BGC ~.,data=X2,method="class",control=rpart.control(minsplit=8,cp=.001))
printcp(fit)
print(fit)
pp=fit$cptable[which.min(fit$cptable[,"xerror"]),"CP"] # obtain the best split
#fit= prune(fit,cp=0.0260870)
fit= prune(fit,cp=pp)
## Graph CART (Colour fill)
prp(fit,type=0,extra=2,fallen.leaves=0,branch=0.6,varlen=12,split.cex=1.6,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
printcp(fit)
print(fit)
pp=fit$cptable[which.min(fit$cptable[,"xerror"]),"CP"] # obtain the best split
#fit= prune(fit,cp=0.0260870)
fit= prune(fit,cp=pp)
prp(fit,type=0,extra=2,fallen.leaves=0,branch=0.6,varlen=12,split.cex=1.6,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
fit=rpart(BGC ~.,data=X2,method="class",control=rpart.control(minsplit=8,cp=.001))
printcp(fit)
print(fit)
pp=fit$cptable[which.min(fit$cptable[,"xerror"]),"CP"] # obtain the best split
#fit= prune(fit,cp=0.0260870)
fit=
fit= prune(fit,cp=pp)
prp(fit,type=0,extra=2,fallen.leaves=1,varlen=12,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
prp(fit,type=0,extra=2,fallen.leaves=0,branch=0.6,varlen=12,split.cex=1.6,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
fit=rpart(Zone ~.,data=X2,method="class",control=rpart.control(minsplit=8,cp=.001))
fit=rpart(BGC ~.,data=X2,method="class",control=rpart.control(minsplit=8,cp=.001))
Y
Zone
BGC
str(X)
X=X1
Boreal.lo=c("BWBSdk","BWBSmk","BWBSmw","BWBSwk1","BWBSwk2","BWBSwk3")
#Boreal.hi=c("SWBmk","SWBun","ESSFmv4")
Coast.lo=c("CDFmm","CWHdm","CWHds1","CWHds2","CWHmm1","CWHmm2","CWHms1","CWHms2","CWHun","CWHvh1","CWHvh2","CWHvh3",
"CWHvm1","CWHvm2","CWHwh1","CWHwh2","CWHwm","CWHws1","CWHws2","CWHxm1","CWHxm2")
Coast.hi=c("ESSFmw","ESSFmw1","MHmm1","MHmm2","MHun","MHwh","MHwh1")
#Removed Woodland ,"ESSFmww","ESSFvcw","ESSFwmw","ESSFwcw"
IntRainF.lo=c("ICHdk","ICHdm","ICHdw1","ICHdw3","ICHmk1","ICHmk2","ICHmk3","ICHmk4","ICHmk5",
"ICHmm","ICHmw1","ICHmw2","ICHmw3","ICHmw4","ICHmw5","ICHmw6","ICHvk1","ICHvk2",
"ICHwk1","ICHwk2","ICHwk3","ICHwk4","SBSvk","SBSwk1","SBSwk2")
#"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
IntRainF.hi=c("ESSFmh","ESSFmm1","ESSFmm2","ESSFvc","ESSFvk","ESSFvm","ESSFwc2",
"ESSFwc3","ESSFwc4","ESSFwh1","ESSFwh2","ESSFwh3","ESSFwk1","ESSFwk2","ESSFwm1","ESSFwm2","ESSFwm3")
#NICH.lo=c("ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
#NICH.hi=c("ESSFun","ESSFwv","ESSFmk")
SDry.lo=c("BGxh1","BGxh2","BGxh3","BGxw1","BGxw2","IDFdc","IDFdh","IDFdk1","IDFdk2","IDFdk3","IDFdk4","IDFdk5","IDFdm1","IDFdm2","IDFdw","IDFmw1","IDFmw2",
"IDFxc","IDFxh1","IDFxh2","IDFxk","IDFxm","IDFxw","IDFxx1","IDFxx2",
"PPxh1","PPxh2","PPxw",
"IDFww","IDFww1","ICHxw")
##"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3","MSxv",
SDry.hi=c("ESSFdc1","ESSFdc2","ESSFdc3","ESSFdk1","ESSFdk2","ESSFdv1","ESSFdv2",
"ESSFxc1","ESSFxc2","ESSFxc3","ESSFxv1","ESSFxv2","ESSFdh2","ESSFmw2","ESSFdh1",
"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3")
#removed woodland ,"ESSFdkw","ESSFdvw","ESSFxcw","ESSFxvw","ESSFdcp","ESSFdcw"
SubBor.lo=c("SBPSmc","SBPSxc","SBSdh1","SBSdh2","SBSdk","SBSdw1","SBSdw2","SBSdw3",
"SBSmc1","SBSmc2","SBSmc3","SBSmh","SBSmk1","SBSmk2","SBSmm","SBSmw","SBSwk3","SBPSdc","SBPSmk","MSxv",
"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
SubBor.hi=c("ESSFmc","ESSFmv1","ESSFmv2","ESSFmv3","ESSFun","ESSFwv","ESSFmk","SWBmk","SWBun","ESSFmv4")
# Concatenate Subzones by Low and High Elevation:
#$SubReg.lo=c(Coast.lo, Boreal.lo,SubBor.lo,IntRainF.lo,SDry.lo)
#SubReg.hi=c(Coast.hi, SubBor.hi,IntRainF.hi,SDry.hi)
#temp removal  NICH.hi,Boreal.hi NICH.lo,
# Concatenate Subzones by Analysis Region:
SubReg.coast = c(Coast.lo, Coast.hi)
SubReg.boreal= c(Boreal.lo, SubBor.lo, SubBor.hi)
SubReg.rainfor = c(IntRainF.lo, IntRainF.hi)
SubReg.sdry = c(SDry.lo, SDry.hi)
# Create a variable that describes SubRegion:
X$SREG=""
X$SREG[X$BGC %in% c(SubReg.boreal)]="Boreal"
X$SREG[X$BGC %in% c(SubReg.coast)]="Coast"
X$SREG[X$BGC %in% c(SubReg.rainfor)]="IntRainF"
#X$REG[X$BGC %in% c(NICH.lo)]="NICH"
X$SREG[X$BGC %in% c(SubReg.sdry)]="SDry"
#X$REG[X$BGC %in% c(SubBor.lo,SubBor.hi)]="SubBor"
#temporary ,Boreal.hi ,NICH.hi)
# ID and Drop Missing Subzones Excluded in the SubRegion Above:
Missing=unique(X$BGC[X$SREG==""])
Missing
X=droplevels(X[!X$BGC %in% Missing,])
X=X[,c(ncol(X),1:(ncol(X)-1))]
X=X[X$BGC %in% c(SubReg.sdry),] # southern dry
X$SREG=factor(X$SREG)
# STEP 9: Re-factor
X$Y=factor(X$Y)
X$BGC=factor(X$BGC)
RM <- c("Site", "BGC", "SREG", "Longitude", "Latitude", "Elevation") # Variables with numeric NA
RM
X2=X[, !names(X) %in% c(RM)] # Drop variables
fit=rpart(Y ~.,data=X2,method="class",control=rpart.control(minsplit=8,cp=.001))
printcp(fit)
print(fit)
pp=fit$cptable[which.min(fit$cptable[,"xerror"]),"CP"] # obtain the best split
#fit= prune(fit,cp=0.0260870)
fit= prune(fit,cp=pp)
## Graph CART (Colour fill)
prp(fit,type=0,extra=2,fallen.leaves=0,branch=0.6,varlen=12,split.cex=1.6,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
prp(fit,type=0,extra=2,fallen.leaves=1,varlen=12,box.col=rainbow(length(unique(X2$BGC)),0.5)[fit$frame$yval])
X=X1
Boreal.lo=c("BWBSdk","BWBSmk","BWBSmw","BWBSwk1","BWBSwk2","BWBSwk3")
#Boreal.hi=c("SWBmk","SWBun","ESSFmv4")
Coast.lo=c("CDFmm","CWHdm","CWHds1","CWHds2","CWHmm1","CWHmm2","CWHms1","CWHms2","CWHun","CWHvh1","CWHvh2","CWHvh3",
"CWHvm1","CWHvm2","CWHwh1","CWHwh2","CWHwm","CWHws1","CWHws2","CWHxm1","CWHxm2")
Coast.hi=c("ESSFmw","ESSFmw1","MHmm1","MHmm2","MHun","MHwh","MHwh1")
#Removed Woodland ,"ESSFmww","ESSFvcw","ESSFwmw","ESSFwcw"
IntRainF.lo=c("ICHdk","ICHdm","ICHdw1","ICHdw3","ICHmk1","ICHmk2","ICHmk3","ICHmk4","ICHmk5",
"ICHmm","ICHmw1","ICHmw2","ICHmw3","ICHmw4","ICHmw5","ICHmw6","ICHvk1","ICHvk2",
"ICHwk1","ICHwk2","ICHwk3","ICHwk4","SBSvk","SBSwk1","SBSwk2")
#"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
IntRainF.hi=c("ESSFmh","ESSFmm1","ESSFmm2","ESSFvc","ESSFvk","ESSFvm","ESSFwc2",
"ESSFwc3","ESSFwc4","ESSFwh1","ESSFwh2","ESSFwh3","ESSFwk1","ESSFwk2","ESSFwm1","ESSFwm2","ESSFwm3")
#NICH.lo=c("ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
#NICH.hi=c("ESSFun","ESSFwv","ESSFmk")
SDry.lo=c("BGxh1","BGxh2","BGxh3","BGxw1","BGxw2","IDFdc","IDFdh","IDFdk1","IDFdk2","IDFdk3","IDFdk4","IDFdk5","IDFdm1","IDFdm2","IDFdw","IDFmw1","IDFmw2",
"IDFxc","IDFxh1","IDFxh2","IDFxk","IDFxm","IDFxw","IDFxx1","IDFxx2",
"PPxh1","PPxh2","PPxw",
"IDFww","IDFww1","ICHxw")
##"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3","MSxv",
SDry.hi=c("ESSFdc1","ESSFdc2","ESSFdc3","ESSFdk1","ESSFdk2","ESSFdv1","ESSFdv2",
"ESSFxc1","ESSFxc2","ESSFxc3","ESSFxv1","ESSFxv2","ESSFdh2","ESSFmw2","ESSFdh1",
"MSdc1","MSdc2","MSdc3","MSdk","MSdm1","MSdm2","MSdm3","MSdv","MSdw","MSun","MSxk1","MSxk2","MSxk3")
#removed woodland ,"ESSFdkw","ESSFdvw","ESSFxcw","ESSFxvw","ESSFdcp","ESSFdcw"
SubBor.lo=c("SBPSmc","SBPSxc","SBSdh1","SBSdh2","SBSdk","SBSdw1","SBSdw2","SBSdw3",
"SBSmc1","SBSmc2","SBSmc3","SBSmh","SBSmk1","SBSmk2","SBSmm","SBSmw","SBSwk3","SBPSdc","SBPSmk","MSxv",
"ICHmc1","ICHmc2","ICHvc","ICHwc","SBSun")
SubBor.hi=c("ESSFmc","ESSFmv1","ESSFmv2","ESSFmv3","ESSFun","ESSFwv","ESSFmk","SWBmk","SWBun","ESSFmv4")
# Concatenate Subzones by Low and High Elevation:
#$SubReg.lo=c(Coast.lo, Boreal.lo,SubBor.lo,IntRainF.lo,SDry.lo)
#SubReg.hi=c(Coast.hi, SubBor.hi,IntRainF.hi,SDry.hi)
#temp removal  NICH.hi,Boreal.hi NICH.lo,
# Concatenate Subzones by Analysis Region:
SubReg.coast = c(Coast.lo, Coast.hi)
SubReg.boreal= c(Boreal.lo, SubBor.lo, SubBor.hi)
SubReg.rainfor = c(IntRainF.lo, IntRainF.hi)
SubReg.sdry = c(SDry.lo, SDry.hi)
SubReg.coast = c(Coast.lo, Coast.hi)
SubReg.boreal= c(Boreal.lo, SubBor.lo, SubBor.hi)
SubReg.rainfor = c(IntRainF.lo, IntRainF.hi)
SubReg.sdry = c(SDry.lo, SDry.hi)
# Create a variable that describes SubRegion:
X$SREG=""
X$SREG[X$Y %in% c(SubReg.boreal)]="Boreal"
X$SREG[X$Y %in% c(SubReg.coast)]="Coast"
X$SREG[X$Y %in% c(SubReg.rainfor)]="IntRainF"
#X$REG[X$BGC %in% c(NICH.lo)]="NICH"
X$SREG[X$Y %in% c(SubReg.sdry)]="SDry"
#X$REG[X$BGC %in% c(SubBor.lo,SubBor.hi)]="SubBor"
#temporary ,Boreal.hi ,NICH.hi)
# ID and Drop Missing Subzones Excluded in the SubRegion Above:
Missing=unique(X$Y[X$SREG==""])
Missing
X=droplevels(X[!X$Y %in% Missing,])
X=X[,c(ncol(X),1:(ncol(X)-1))]
X=X[X$BGC %in% c(SubReg.sdry),] # southern dry
X$SREG=factor(X$SREG)
# STEP 9: Re-factor
X$Y=factor(X$Y)
X$BGC=factor(X$BGC)
RM <- c("Site", "BGC", "SREG", "Longitude", "Latitude", "Elevation") # Variables with numeric NA
RM
X2=X[, !names(X) %in% c(RM)] # Drop variables
fit=rpart(Y ~.,data=X2,method="class",control=rpart.control(minsplit=8,cp=.001))
RM
str(X2)
dgamma
help(dgamma)
require(graphics)
choose(5, 2)
for (n in 0:10) print(choose(n, k = 0:n))
factorial(100)
lfactorial(10000)
op <- options("warn")
options(warn = -1)
x <- sort(c(seq(-3, 4, length.out = 201), outer(0:-3, (-1:1)*1e-6, "+")))
plot(x, gamma(x), ylim = c(-20,20), col = "red", type = "l", lwd = 2,
main = expression(Gamma(x)))
abline(h = 0, v = -3:0, lty = 3, col = "midnightblue")
options(op)
dnorm
C_dgamma
C_dnorm
.call
help(.call)
".Call"
.Call
help(.Call)
y = seq(o.1,1,.1)
x = seq(0.1,1,.1)
y = gamma(x)
plot(x,y)
w = gaussian(v)
x = seq(0.1,1,.1)
y = gamma(x)
plot(x,y)
v = seq(0.1,1,.1)
w = gaussian(v)
#I'm not sure which packages are necessary for R to read shapefile so i will load all the ones from Colin's predict woodland template code
library(scales)
library(MASS)
library(stats)
library(rgl)
library(RColorBrewer)
library(FNN)
library(igraph)
library(raster)
library(maps)
library(mapdata)
library(maptools)
library(sp)
library(colorRamps)
library(rgeos)
library(rgdal)
library(foreign)
## define projections for use in the analysis.
P4S.latlon <- CRS("+proj=longlat +datum=WGS84")
P4S.AEA <- CRS ("+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs") # standard albers projection for BC gov't data
VRI <- readOGR(dsn = "/path/to/data", layer = "LIMITE_DEPARTEMENT", ...)
help(readOGR)
VRI <- readOGR(dsn = "I:/VRI shapefiles", layer = "Stands_VRI")
class(VRI)
head(VRI)
str(VRI)
names(VRI)
VRIshort<-as.dataframe(VRI["Site_ID" "FEATURE_ID" "INSIDE_X" "INSIDE_Y" "POLYGON_AR"
"SPECIES__1" "SPECIES__2" "SPECIES__3" "SPECIES__4"
"SPECIES__5" "SPECIES__6" "SPECIES__7" "SPECIES__8"
"SPECIES__9" "SPECIES_10" "PROJ_AGE_1" "PROJ_AGE_C"])
VRIshort<-as.dataframe(VRI[ "FEATURE_ID" "INSIDE_X" "INSIDE_Y" "POLYGON_AR"
"SPECIES__1" "SPECIES__2" "SPECIES__3" "SPECIES__4"
"SPECIES__5" "SPECIES__6" "SPECIES__7" "SPECIES__8"
"SPECIES__9" "SPECIES_10" "PROJ_AGE_1" "PROJ_AGE_C"])
VRIshort<-as.dataframe(VRI[ "FEATURE_ID" "INSIDE_X" "INSIDE_Y" ])
VRIshort<-as.dataframe(VRI[ "FEATURE_ID", "INSIDE_X", "INSIDE_Y" ])
class(VRI)
VRIshort<-as.data.frame(VRI[ "FEATURE_ID", "INSIDE_X", "INSIDE_Y" ])
VRIshort<-as.data.frame(VRI["FEATURE_ID"  "POLYGON_AR"   "SPECIES_CD" "SPECIES_PC" "SPECIES__1" "SPECIES__2" "SPECIES__3" "SPECIES__4"
"SPECIES__5" "SPECIES__6" "SPECIES__7" "SPECIES__8" "SPECIES__9" "SPECIES_10" "PROJ_AGE_1"
"PROJ_AGE_C" "PROJ_AGE_2" "PROJ_AGE_3"  "INSIDE_X"   "INSIDE_Y"])
VRIshort<-as.data.frame(VRI["FEATURE_ID"  "POLYGON_AR"   "SPECIES_CD" "SPECIES_PC" "SPECIES__1" "SPECIES__2" "SPECIES__3" "SPECIES__4"
"SPECIES__5" "SPECIES__6" "SPECIES__7" "SPECIES__8" "SPECIES__9" "SPECIES_10" "PROJ_AGE_1"
"PROJ_AGE_3"  "INSIDE_X"   "INSIDE_Y"])
VRIshort<-as.data.frame(VRI["FEATURE_ID"  "POLYGON_AR"   "SPECIES_CD" "SPECIES_PC" "SPECIES__1" "SPECIES__2" "SPECIES__3" "SPECIES__4"
"SPECIES__5" "SPECIES__6" "SPECIES__7" "SPECIES__8" "SPECIES__9" "SPECIES_10" "PROJ_AGE_1"])
VRIshort<-as.data.frame(VRI["FEATURE_ID"  "POLYGON_AR"   "SPECIES_CD" "SPECIES_PC" "SPECIES__1" "SPECIES__2" "SPECIES__3" "SPECIES__4" "SPECIES__5" "SPECIES__6" "SPECIES__7" "SPECIES__8" "SPECIES__9" "SPECIES_10" "PROJ_AGE_1"])
VRIshort<-as.data.frame(VRI["FEATURE_ID"  "POLYGON_AR"   "SPECIES_CD" ])
VRIshort<-as.data.frame(VRI["FEATURE_ID",  "POLYGON_AR" ,  "SPECIES_CD" ])
VRIshort<-as.data.frame(VRI["FEATURE_ID" , "POLYGON_AR" ,  "SPECIES_CD", "SPECIES_PC" ,"SPECIES__1" ,"SPECIES__2", "SPECIES__3" ,"SPECIES__4",
"SPECIES__5", "SPECIES__6", "SPECIES__7", "SPECIES__8", "SPECIES__9", "SPECIES_10", "PROJ_AGE_1",
"PROJ_AGE_C" ,"PROJ_AGE_2" ,"PROJ_AGE_3" , "INSIDE_X"  , "INSIDE_Y"])
str(VRIshort)
VRIshort<-as.data.frame(VRI[,c("FEATURE_ID" , "POLYGON_AR" ,  "SPECIES_CD", "SPECIES_PC" ,"SPECIES__1" ,"SPECIES__2", "SPECIES__3" ,"SPECIES__4",
"SPECIES__5", "SPECIES__6", "SPECIES__7", "SPECIES__8", "SPECIES__9", "SPECIES_10", "PROJ_AGE_1",
"PROJ_AGE_C" ,"PROJ_AGE_2" ,"PROJ_AGE_3" , "INSIDE_X"  , "INSIDE_Y")])
class(VRIshort)
str(VRIshort)
install.packages("installr")
require(installr)
updateR()
?scipen
require(clhs)
# For generating a conditioned latin hypercube sample
# When you start with a new dataset, make sure to follow "When You Have New Dataset" below first:
#set library
.libPaths("E:/R packages")
require(clhs)
require(raster)
# Install the following R packages:
install.packages("clhs")
rm(list=ls())
options(stringsAsFactors = FALSE)
# The codes below need to be run only once when you start with a new dataset #
## Set working directory:
wd=tk_choose.dir()
######Clear environment and add in dataset############
require(tcltk)
# The codes below need to be run only once when you start with a new dataset #
## Set working directory:
wd=tk_choose.dir()
setwd(wd)
# Stack Elevation and Slope
rs <- stack(TWI.tif, AnisotropicHeating.tif)
# Stack Elevation and Slope
rs <- stack(TWI, AnisotropicHeating)
# The codes below need to be run only once when you start with a new dataset #
## Set working directory:
wd=tk_choose.dir()
setwd(wd)
# Stack Elevation and Slope
rs <- stack(TWI, AnisotropicHeating)
# Stack Elevation and Slope
rs <- stack("TWI.tif", "AnisotropicHeating.tif")
# generate cLHS design
cs <- clhs(rs, size = 20, progress = FALSE, simple = FALSE)
require(clhs)
# generate cLHS design
cs <- clhs(rs, size = 20, progress = FALSE, simple = FALSE)
# generate cLHS design
cs <- clhs(rs, size = 20, progress = FALSE, simple = FALSE)
data("Dec_dem_BCALbers_25m.tif")
# generate cLHS design
cs <- clhs(rs, size = 5, progress = TRUE, simple = TRUE)
#Load the ModelMap program
library("ModelMap")
#Load the ModelMap program
.libPaths("E:/R packages")
install.packages ("ModelMap")
require("ModelMap")
model.type <-"RF"
# Ensure that you have working Dataset and BEC Pair Table in your working directory:
# When you start with a new dataset, make sure to follow "When You Have New Dataset" below first:
#set library
.libPaths("E:/R packages")
library(rattle)
library(rpart)
library(rpart.plot)
library(plyr)
library(reshape)
library(reshape2)
library(VSURF)
library(reports)
library(rpart.utils)
require(rfUtilities)
library("parallel")
library("foreach")
library("doParallel")
require("ggplot2")
library(functional)
require(plot3D)
library(dplyr)
library(tcltk)
library(caret)
require(ranger)
require(randomForest)
require (OpenMP)
require (randomForestSRC)
require (tools)
rm(list=ls())
options(stringsAsFactors = FALSE)
# The codes below need to be run only once when you start with a new dataset #
## Set working directory:
wd=tk_choose.dir()
setwd(wd)
############# Prepare Dataset for Analysis:----
# Load saved RDA Dataset (if .csv not used):
fname="allBGC_ClimateWNA"
load(paste(fname,".Rda",sep=""))
# The codes below need to be run only once when you start with a new dataset #
## Set working directory:
wd=tk_choose.dir()
# The codes below need to be run only once when you start with a new dataset #
## Set working directory:
wd=tk_choose.dir()
setwd(wd)
############# Prepare Dataset for Analysis:----
# Load saved RDA Dataset (if .csv not used):
fname="allBGC_ClimateWNA_1961-90"
load(paste(fname,".Rda",sep=""))
View(X1)
unique(X1$BGC)
